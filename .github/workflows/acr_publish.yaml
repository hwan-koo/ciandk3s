name: Publish Docker GitHub image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


on:      
  workflow_dispatch:
    inputs:
      name:
        description: "Docker TAG"
        required: true
        default: "master"
#  schedule:
#    - cron: '25 2 * * *'
#  push:
#    branches: [ master ]
#    # Publish semver tags as releases.
#    tags: [ 'v*.*.*' ]
#  pull_request:
#    branches: [ master ]


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Log in to Docker Hub
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
        
      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Seoul
          
      - name: set env  # TAG 를 현재 시간으로 설정
        run: echo "NOW=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ github.repository }}
          tags: ${{ env.NOW }} # ${{ github.event.inputs.name }}


      - name: Build and Push to ACR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          platforms: linux/amd64
          build-args: |
            WHATAP_HOST: ${{ secrets.WHATAP_HOST }}
          tags: ${{ secrets.AZURE_URL }}/${{ steps.meta.outputs.tags }}
            
      # 취약점 검사    
      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     #image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
      #     image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     format: 'sarif'
      #     output: 'trivy-results.sarif'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   if: always()
      #   with:
      #     sarif_file: 'trivy-results.sarif'
